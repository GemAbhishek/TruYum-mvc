@model TruYum.Models.UpdateViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Create", "MenuItems"))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <h4>MenuItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MenuItem.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MenuItem.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MenuItem.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuItem.FreeDelivery, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.MenuItem.FreeDelivery)
                    @Html.ValidationMessageFor(model => model.MenuItem.FreeDelivery, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuItem.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MenuItem.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MenuItem.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuItem.DateOfLaunch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MenuItem.DateOfLaunch, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MenuItem.DateOfLaunch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuItem.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.MenuItem.Active)
                    @Html.ValidationMessageFor(model => model.MenuItem.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MenuItem.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MenuItem.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "---select---", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MenuItem.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.MenuItem.Id)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="Create" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
